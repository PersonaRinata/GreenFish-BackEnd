// Code generated by Kitex v0.6.2. DO NOT EDIT.

package apiservice

import (
	api "GoYin/server/kitex_gen/api"
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	Register(ctx context.Context, req *api.DouyinUserRegisterRequest, callOptions ...callopt.Option) (r *api.DouyinUserRegisterResponse, err error)
	Login(ctx context.Context, req *api.DouyinUserLoginRequest, callOptions ...callopt.Option) (r *api.DouyinUserLoginResponse, err error)
	GetUserInfo(ctx context.Context, req *api.DouyinUserRequest, callOptions ...callopt.Option) (r *api.DouyinUserResponse, err error)
	Feed(ctx context.Context, req *api.DouyinFeedRequest, callOptions ...callopt.Option) (r *api.DouyinFeedResponse, err error)
	PublishVideo(ctx context.Context, req *api.DouyinPublishActionRequest, callOptions ...callopt.Option) (r *api.DouyinPublishActionResponse, err error)
	VideoList(ctx context.Context, req *api.DouyinPublishListRequest, callOptions ...callopt.Option) (r *api.DouyinPublishListResponse, err error)
	Favorite(ctx context.Context, req *api.DouyinFavoriteActionRequest, callOptions ...callopt.Option) (r *api.DouyinFavoriteActionResponse, err error)
	FavoriteList(ctx context.Context, req *api.DouyinFavoriteListRequest, callOptions ...callopt.Option) (r *api.DouyinFavoriteListResponse, err error)
	Comment(ctx context.Context, req *api.DouyinCommentActionRequest, callOptions ...callopt.Option) (r *api.DouyinCommentActionResponse, err error)
	CommentList(ctx context.Context, req *api.DouyinCommentListRequest, callOptions ...callopt.Option) (r *api.DouyinCommentListResponse, err error)
	Action(ctx context.Context, req *api.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *api.DouyinRelationActionResponse, err error)
	FollowingList(ctx context.Context, req *api.DouyinRelationFollowListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFollowListResponse, err error)
	FollowerList(ctx context.Context, req *api.DouyinRelationFollowerListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFollowerListResponse, err error)
	FriendList(ctx context.Context, req *api.DouyinRelationFriendListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFriendListResponse, err error)
	ChatHistory(ctx context.Context, req *api.DouyinMessageChatRequest, callOptions ...callopt.Option) (r *api.DouyinMessageChatResponse, err error)
	SentMessage(ctx context.Context, req *api.DouyinMessageActionRequest, callOptions ...callopt.Option) (r *api.DouyinMessageActionResponse, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kApiServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kApiServiceClient struct {
	*kClient
}

func (p *kApiServiceClient) Register(ctx context.Context, req *api.DouyinUserRegisterRequest, callOptions ...callopt.Option) (r *api.DouyinUserRegisterResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Register(ctx, req)
}

func (p *kApiServiceClient) Login(ctx context.Context, req *api.DouyinUserLoginRequest, callOptions ...callopt.Option) (r *api.DouyinUserLoginResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Login(ctx, req)
}

func (p *kApiServiceClient) GetUserInfo(ctx context.Context, req *api.DouyinUserRequest, callOptions ...callopt.Option) (r *api.DouyinUserResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserInfo(ctx, req)
}

func (p *kApiServiceClient) Feed(ctx context.Context, req *api.DouyinFeedRequest, callOptions ...callopt.Option) (r *api.DouyinFeedResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Feed(ctx, req)
}

func (p *kApiServiceClient) PublishVideo(ctx context.Context, req *api.DouyinPublishActionRequest, callOptions ...callopt.Option) (r *api.DouyinPublishActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.PublishVideo(ctx, req)
}

func (p *kApiServiceClient) VideoList(ctx context.Context, req *api.DouyinPublishListRequest, callOptions ...callopt.Option) (r *api.DouyinPublishListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.VideoList(ctx, req)
}

func (p *kApiServiceClient) Favorite(ctx context.Context, req *api.DouyinFavoriteActionRequest, callOptions ...callopt.Option) (r *api.DouyinFavoriteActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Favorite(ctx, req)
}

func (p *kApiServiceClient) FavoriteList(ctx context.Context, req *api.DouyinFavoriteListRequest, callOptions ...callopt.Option) (r *api.DouyinFavoriteListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FavoriteList(ctx, req)
}

func (p *kApiServiceClient) Comment(ctx context.Context, req *api.DouyinCommentActionRequest, callOptions ...callopt.Option) (r *api.DouyinCommentActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Comment(ctx, req)
}

func (p *kApiServiceClient) CommentList(ctx context.Context, req *api.DouyinCommentListRequest, callOptions ...callopt.Option) (r *api.DouyinCommentListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CommentList(ctx, req)
}

func (p *kApiServiceClient) Action(ctx context.Context, req *api.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *api.DouyinRelationActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Action(ctx, req)
}

func (p *kApiServiceClient) FollowingList(ctx context.Context, req *api.DouyinRelationFollowListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFollowListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FollowingList(ctx, req)
}

func (p *kApiServiceClient) FollowerList(ctx context.Context, req *api.DouyinRelationFollowerListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFollowerListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FollowerList(ctx, req)
}

func (p *kApiServiceClient) FriendList(ctx context.Context, req *api.DouyinRelationFriendListRequest, callOptions ...callopt.Option) (r *api.DouyinRelationFriendListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FriendList(ctx, req)
}

func (p *kApiServiceClient) ChatHistory(ctx context.Context, req *api.DouyinMessageChatRequest, callOptions ...callopt.Option) (r *api.DouyinMessageChatResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ChatHistory(ctx, req)
}

func (p *kApiServiceClient) SentMessage(ctx context.Context, req *api.DouyinMessageActionRequest, callOptions ...callopt.Option) (r *api.DouyinMessageActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SentMessage(ctx, req)
}
